public class A {
	int a, b;
	static int c, d;

	public void x() {
		a = 5;
		b = 6; // 在实例方法中，访问本类的实例程序，其有默认的引用this
		c = 7;
		d = 8; // 访问静态成员，建议还是通过类名.静态成员这样的形式
	}

	public void y() {
		x(); // 在实例方法y中访问实例方法x(); 等价于this.x();
		a = 10; // 将来通过后绑定，可能执行的不是本类的x方法
	} // 看后续的程序创建是否是A类的实例还是A类子类的实例

	public static void main(String[] args) {
		A a = new A();
		a.a = 9;
		a.b = 10; // 这是正确的程序
		a.y(); // 这也是正确的程序
		c = 11;
		d = 12; // 在静态方法中访问当前类的静态变量
		// x(); 错误的程序，x方法是实例方法，必须通过某个实例来访问
		// a = 5; 错误的程序，变量a是实例变量，当然需要指定某个对象的a
		// this.b = 9; 静态方法中不允许出现this，静态方法不依赖于任何类实例
	} // 静态方法没有this存在，this只能出现在实例方法中，指向“当前的”实例
}
